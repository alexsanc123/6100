<python>
cs_content_header = cs_long_name
</python>

<tableofcontents/>

<section>About CAT-SOOP</section>

CAT-SOOP is a flexible, programmable learning management system based on the
Python programming language.  During the 2018-2019 academic year, CAT-SOOP was
used in 12 subjects at MIT, and total enrollment in these subjects was around
3000 students.

CAT-SOOP was designed primarily with flexibility, extensibility, and
programmability in mind.  That is to say, it should be possible to use and
adapt CAT-SOOP to subjects with dramatically different structure, technical
content, and pedagogy; and while the intention is to "bake in" lots of common
pieces, effectively any behavior within catsoop can be overridden.  While
CAT-SOOP's core functionality is the collection and assessment of online
exercises, it has been extended to support a variety of different features
including, among others:

* content presentation (via text, video, interactive simulations, etc)
* grade reports and analytics (including fine-grained control over grading, due dates, extensions, and lateness penalties)
* queueing system for managing requests for help in an in-class lab environment or office hours
* real-time analytics for synchronous lab assignments
* timed quizzes
* a variety of subject-specific question types
* group exercises (with randomly-assigned or self-selected groups)
* finely-grained control over release/due dates (by section, or for individuals)
* an interface for online grading of paper exams

<subsection>History</subsection>

CAT-SOOP is a descendent of a system written by Tom&aacute;s
Lozano-P&eacute;rez in the early-to-mid 1990's, referred to around MIT as "the
tutor."  The tutor was widely used at MIT and other universities.  In 2011,
CAT-SOOP and another system (Ike Chuang's `tutor2`, which I understand
eventually grew into [Open edX](https://open.edx.org)) were both developed in
parallel as potential replacements for the tutor in MIT's 6.01 (Introduction to
Electrical Engineering and Computer Science via Robotics).  Despite having been
designed for 6.01, CAT-SOOP was actually first used in the fall 2011 offering
of 6.003 (Signals and Systems), while `tutor2` was used in 6.01.  CAT-SOOP was
first used in 6.01 in the spring 2013 semester, and it began to see use in other
subjects in later semesters.

While the internal structure of CAT-SOOP has changed a lot since then
(including multiple rewrites from the ground up), development is still fairly
active (particularly in the time between MIT's semesters).

<section>Courses Using CAT-SOOP</section>

The following are some of the courses I know of that use (or have used)
CAT-SOOP as their main LMS:

* MIT 6.0001: _Introduction to Computer Science Programming in Python_
* MIT 6.0002: _6.0002 Introduction to Computational Thinking and Data Science_
* MIT 6.01: _Introduction to EECS via Robotics_
* MIT 6.02: _Introduction to EECS via Communications Networks_
* MIT 6.08: _Interconnected Embedded Systems_
* MIT 6.145: _A Brief Introduction to Programming in Python_
* MIT 6.002: _Circuits and Electronics_
* MIT 6.003: _Signal Processing_
* MIT 6.004: _Computation Structures_
* MIT 6.006: _Introduction to Algorithms_
* MIT 6.009: _Fundamentals of Programming_
* MIT 6.036: _Introduction to Machine Learning_
* MIT 6.302: _Feedback System Design_
* MIT 6.A01: _Mens et Manus_ First-year Seminar
* MIT 6.s092: _Crash course in Algorithms_ (IAP)
* Olin College MTH 2132/SCI 2032: _Bayesian Inference and Reasoning_
* Olin College ENGR2340: _Dynamics_
* Olin College SCI2050: _The Art of Approximation in Science and Engineering_

If you use CAT-SOOP in your class, please let us know by introducing yourself
on the [community forum](/community)!
